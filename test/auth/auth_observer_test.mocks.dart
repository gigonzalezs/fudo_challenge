// Mocks generated by Mockito 5.4.2 from annotations
// in fudo_challenge/test/auth/auth_observer_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:fudo_challenge/auth/states.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

import 'auth_observer_test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthObserverConsumer].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthObserverConsumer extends _i1.Mock
    implements _i2.AuthObserverConsumer {
  @override
  void onFail(_i3.LoginResultFail? fail) => super.noSuchMethod(
        Invocation.method(
          #onFail,
          [fail],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onSuccess(_i3.LoginResultSuccess? success) => super.noSuchMethod(
        Invocation.method(
          #onSuccess,
          [success],
        ),
        returnValueForMissingStub: null,
      );
}
